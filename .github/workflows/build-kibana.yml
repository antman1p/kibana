name: Build and Publish Kibana to GHCR

on:
  push:
    branches:
      - openai_pki_connector_8_15
  pull_request:
    branches:
      - openai_pki_connector_8_15

jobs:
  build:
    runs-on: ubuntu-latest  # GitHub-hosted runner

    steps:
      - name: Checkout Repository and Ensure Correct Branch
        uses: actions/checkout@v4
        with:
          ref: openai_pki_connector_8_15  # Ensure we are on the right branch

      - name: Verify Git Branch Being Used
        run: |
          echo "Currently checked out branch:"
          git branch --show-current
          git log --oneline -1

      - name: Read Node.js Version from .node-version
        id: node_version
        run: echo "NODE_VERSION=$(cat .node-version | tr -d '[:space:]')" >> $GITHUB_ENV

      - name: Debug Node.js Version Read from File
        run: echo "Node.js Version from .node-version: $NODE_VERSION"

      - name: Remove Any Existing Node.js Versions
        run: |
          sudo rm -rf /opt/hostedtoolcache/Node*
          node -v || echo "Node.js is not installed"

      - name: Install Correct Node.js Version
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Verify Installed Node.js Version
        run: |
          echo "Node.js version after setup:"
          node -v
          which node
          ls -l $(which node)

      - name: Check Disk Space Before Cleanup
        run: df -h

      - name: Free Up Disk Space
        run: |
          sudo apt-get clean
          sudo apt-get autoremove -y
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo docker system prune -af
          df -h  # Check space again

      - name: Cache Yarn Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.yarn
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: yarn-${{ runner.os }}-

      - name: Verify Kibana Version Being Built
        run: |
          echo "Kibana Version Being Built:"
          cat package.json | grep '"version"'

      - name: Bootstrap Kibana
        run: yarn kbn bootstrap

      - name: Build Only Linux-x86_64 Version
        run: |
          yarn build --release --skip-archives="darwin-x86_64,darwin-aarch64,windows-x86_64,linux-aarch64"

      - name: Log in to GitHub Container Registry (GHCR)
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker Image with Tag 8.15
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/kibana:8.15 .

      - name: Push Docker Image to GHCR
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/kibana:8.15
